{
  "version": 3,
  "sources": ["../src/index.ts"],
  "sourcesContent": ["import { NodeTypes } from \"./ast\";\n\nexport function compile(template) {\n  const ast = parse(template);\n\n  return ast;\n}\n\nfunction parse(template) {\n  // 1.\u521B\u5EFA\u89E3\u6790\u4E0A\u4E0B\u6587  (\u89E3\u6790\u7684\u4F4D\u7F6E\u884C\u5217\u7B49\u4FE1\u606F)\n  const context = createParserContext(template);\n  return parseChildren(context);\n}\n\nfunction parseChildren(context) {\n  const nodes = []; // \u4FDD\u5B58\u89E3\u6790\u51FA\u6765\u7684\u8282\u70B9\n  /**\n   * < \u5143\u7D20\n   * {{}} \u8868\u8FBE\u5F0F\n   */\n  while (!isEnd(context)) {\n    const { source } = context;\n    let node;\n    if (source.startsWith(\"{{\")) {\n      node = parseInterpolation(context);\n    } else if (source[0] === \"<\") {\n      node = parseElement(context);\n    }\n    // \u6587\u672C\n    if (!node) {\n      node = psrseText(context);\n    }\n    nodes.push(node);\n  }\n  return nodes;\n}\nfunction isEnd(context) {\n  const { source } = context;\n  if (source.startsWith(\"</\")) {\n    return true;\n  }\n  return source.length === 0;\n}\n\nfunction getSelection(context, start, end?) {\n  end = end || getCursor(context);\n  return {\n    start,\n    end,\n    source: context.originalSource.slice(start.offset, end.offset),\n  };\n}\nfunction parseElement(context) {\n  // <br />  <div name=\"cjl\"></div>\n  let ele = parseTag(context); // \u5F97\u5230\u89E3\u6790\u7684\u5143\u7D20 \u4F8B\u5982div\n  let children = parseChildren(context);\n\n  if (context.source.startsWith(\"</\")) {\n    // \u8BF4\u660E\u6807\u7B7E\u4E2D\u95F4\u6CA1\u6709\u5185\u5BB9\n    parseTag(context);\n  }\n  ele.loc = getSelection(context, ele.loc.start);\n  ele.children = children;\n  return ele;\n}\nfunction parseTag(context) {\n  const start = getCursor(context);\n  const match = /^<\\/?([a-z][^ \\t\\r\\n/>]*)/.exec(context.source);\n  const tag = match[1]; // \u62FF\u5230\u6807\u7B7E\u540D\n\n  advanceBy(context, match[0].length); // \u5220\u6389\u6807\u7B7E <div\n  advanceBySpaces(context); // \u5220\u9664\u7A7A\u683C\n\n  // <div>   <div/>\n  // \u5224\u65AD\u662F\u5426\u4E3A\u81EA\u95ED\u548C\u6807\u7B7E\n  const isSelfClosing = context.source.startsWith(\"/>\");\n\n  advanceBy(context, isSelfClosing ? 2 : 1);\n\n  return {\n    type: NodeTypes.ELEMENT,\n    tag,\n    isSelfClosing,\n    children: [],\n    loc: getSelection(context, start),\n  };\n}\nfunction parseInterpolation(context) {\n  const start = getCursor(context);\n  const closeIndex = context.source.indexOf(\"}}\", \"{{\".length);\n  advanceBy(context, 2);\n  const innerStart = getCursor(context);\n  const innerEnd = getCursor(context);\n  // \u62FF\u5230\u53CC\u5927\u62EC\u53F7\u91CC\u7684\u5185\u5BB9\n  const rawContentLength = closeIndex - 2;\n\n  const preContent = parseTextData(context, rawContentLength);\n\n  const content = preContent.trim();\n\n  const startOffset = preContent.indexOf(content);\n\n  if (startOffset > 0) {\n    // \u66F4\u65B0start\n    advancePositionWithMutation(innerStart, preContent, startOffset);\n  }\n  // \u66F4\u65B0\u7ED3\u5C3E\n  const endOffset = startOffset + content.length;\n\n  advancePositionWithMutation(innerEnd, preContent, endOffset);\n  advanceBy(context, 2);\n  return {\n    type: NodeTypes.INTERPOLATION,\n    content: {\n      type: NodeTypes.SIMPLE_EXPRESSION,\n      content,\n      loc: getSelection(context, innerStart, innerEnd),\n    },\n    loc: getSelection(context, start),\n  };\n}\nfunction psrseText(context) {\n  const endTokens = [\"<\", \"{{\"]; // \u6587\u672C\u7ED3\u675F\u7684\u6807\u8BC6\n  let endIndex = context.source.length; // \u9ED8\u8BA4\u8BA4\u4E3A\u6587\u672C\u5C31\u662F\u6574\u4E2Asource\n  for (let i = 0; i < endTokens.length; i++) {\n    const index = context.source.indexOf(endTokens[i], 1);\n    if (index !== -1) {\n      endIndex = Math.min(endIndex, index);\n    }\n  }\n\n  // \u521B\u5EFA\u884C\u5217\u4FE1\u606F \u6709\u5229\u4E8E\u540E\u671F\u8FFD\u8E2A\n  const start = getCursor(context);\n\n  // \u62FF\u5230\u5185\u5BB9\n  const content = parseTextData(context, endIndex);\n  return {\n    type: NodeTypes.TEXT, // \u7C7B\u578B\n    content, // \u5185\u5BB9\n    loc: getSelection(context, start),\n  };\n}\nfunction advanceBy(context, endIndex) {\n  const source = context.source;\n  // \u66F4\u65B0\u884C\u5217\u4FE1\u606F\n  advancePositionWithMutation(context, source, endIndex);\n  context.source = source.slice(endIndex);\n}\nfunction advanceBySpaces(context) {\n  const match = /^[ \\t\\r\\n]+/.exec(context.source);\n\n  if (match) {\n    advanceBy(context, match[0].length);\n  }\n}\nfunction advancePositionWithMutation(context, source, endIndex) {\n  let linesCount = 0;\n  let linPos = -1;\n  for (let i = 0; i < endIndex; i++) {\n    // \u6362\u884C\n    if (source.charCodeAt(i) === 10) {\n      linesCount++;\n      linPos = i;\n    }\n  }\n  context.line += linesCount;\n  context.offset += endIndex;\n  context.column = linPos == -1 ? context.column + endIndex : endIndex - linPos;\n}\nfunction parseTextData(context, endIndex) {\n  const rawText = context.source.slice(0, endIndex);\n  // \u5220\u6389\u5DF2\u7ECF\u89E3\u6790\u7684\u5185\u5BB9\n  advanceBy(context, endIndex);\n  return rawText;\n}\nfunction getCursor(context) {\n  const { line, column, offset } = context;\n  return {\n    line,\n    column,\n    offset,\n  };\n}\nfunction createParserContext(template) {\n  return {\n    line: 1,\n    column: 1,\n    offset: 0,\n    source: template, // \u76EE\u524D\u5269\u4E0B\u7684template\uFF08\u4F1A\u4E0D\u505C\u88AB\u622A\u53D6\uFF09\n    originalSource: template, // \u4E0D\u4F1A\u53D8\n  };\n}\n"],
  "mappings": "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",
  "names": []
}
