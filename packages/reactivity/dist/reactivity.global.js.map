{
  "version": 3,
  "sources": ["../src/index.ts", "../../shared/src/index.ts", "../src/baseHandler.ts", "../src/reactive.ts", "../src/effect.ts"],
  "sourcesContent": ["import { isObject } from \"@vue/shared\";\nimport { reactive } from \"./reactive\";\nimport { effect } from \"./effect\";\nexport { reactive, effect };\n", "export const isObject = (value: any) => {\n  return typeof value === \"object\" && value !== null;\n};\n", "export const enum ReactiveFlags {\n  IS_REACTIVE = \"__v_isReactive\",\n}\n\nexport const baseHandler = {\n  // receiver\u5C31\u662Fproxy\u4EE3\u7406\u5BF9\u8C61\uFF0C\u7528\u4E8E\u89E3\u51B3\u5C5E\u6027\u8BBF\u95EE\u5668\u7684this\u6307\u5411\u95EE\u9898\n  get(target: any, key: string, receiver: any) {\n    console.log(\"get\", target, key);\n    // track\n    if (key === ReactiveFlags.IS_REACTIVE) return true; // \u88AB\u4EE3\u7406\u8FC7\u7684\u5BF9\u8C61\u8BBF\u95EEis_reactive\u679A\u4E3E\u5C5E\u6027\u4F1A\u8D70\u8FD9\u4E2A\u903B\u8F91\n    return Reflect.get(target, key, receiver);\n  },\n  set(target: any, key: string, newVal: any, receiver: any) {\n    console.log(\"set\", target, key, newVal);\n    const result = Reflect.set(target, key, newVal, receiver);\n    // trigger\n    console.log(result);\n    return result;\n  },\n};\n", "import { isObject } from \"@vue/shared\";\nimport { baseHandler, ReactiveFlags } from \"./baseHandler\";\n\nconst reactiveMap = new WeakMap<any, ProxyConstructor>();\n// \u5C06\u5BF9\u8C61\u8F6C\u5316\u4E3A\u54CD\u5E94\u5F0F\u5BF9\u8C61\nexport function reactive(target: any) {\n  if (!isObject(target)) return;\n\n  // \u9632\u6B62\u5DF2\u7ECF\u4EE3\u7406\u8FC7\u7684\u5BF9\u8C61\u518D\u6B21\u88AB\u4EE3\u7406\n  if (target[ReactiveFlags.IS_REACTIVE]) {\n    return target;\n  }\n  const existProxy = reactiveMap.get(target);\n  if (existProxy) {\n    return existProxy;\n  }\n  const proxy = new Proxy(target, baseHandler);\n\n  reactiveMap.set(target, proxy);\n\n  return proxy;\n}\n", "// \u76EE\u524D\u6D3B\u8DC3\u7684 effect\nexport let activeEffect: any = undefined;\n\nclass ReactiveEffect {\n  public active = true; // \u8BE5effect\u7684\u72B6\u6001\uFF0C\u662F\u5426\u6D3B\u8DC3\n  public parent = null;\n  constructor(public fn: () => any) {}\n  run() {\n    try {\n      // \u975E\u6FC0\u6D3B\u72B6\u6001\u65E0\u9700\u8FDB\u884C\u4F9D\u8D56\u6536\u96C6\uFF0C\u53EA\u9700\u6267\u884Cfn\u5373\u53EF\n      if (!this.active) return this.fn();\n      this.parent = activeEffect;\n      activeEffect = this;\n      return this.fn();\n    } finally {\n      activeEffect = this.parent;\n      this.parent = null;\n    }\n  }\n  stop() {\n    this.active = false;\n  }\n}\n\n// fn\u53EF\u4EE5\u6839\u636E\u72B6\u6001\u53D8\u5316\u91CD\u65B0\u6267\u884C\uFF0C\u800C\u4E14effect\u53EF\u4EE5\u5D4C\u5957\u4F7F\u7528\nexport function effect(fn: () => any) {\n  const _effect = new ReactiveEffect(fn);\n  // \u9ED8\u8BA4\u6267\u884C\u4E00\u6B21effect\n  _effect.run();\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAO,MAAM,WAAW,CAAC,UAAe;AACtC,WAAO,OAAO,UAAU,YAAY,UAAU;AAAA,EAChD;;;ACEO,MAAM,cAAc;AAAA,IAEzB,IAAI,QAAa,KAAa,UAAe;AAC3C,cAAQ,IAAI,OAAO,QAAQ,GAAG;AAE9B,UAAI,QAAQ;AAA2B,eAAO;AAC9C,aAAO,QAAQ,IAAI,QAAQ,KAAK,QAAQ;AAAA,IAC1C;AAAA,IACA,IAAI,QAAa,KAAa,QAAa,UAAe;AACxD,cAAQ,IAAI,OAAO,QAAQ,KAAK,MAAM;AACtC,YAAM,SAAS,QAAQ,IAAI,QAAQ,KAAK,QAAQ,QAAQ;AAExD,cAAQ,IAAI,MAAM;AAClB,aAAO;AAAA,IACT;AAAA,EACF;;;AChBA,MAAM,cAAc,oBAAI,QAA+B;AAEhD,WAAS,SAAS,QAAa;AACpC,QAAI,CAAC,SAAS,MAAM;AAAG;AAGvB,QAAI,4CAAmC;AACrC,aAAO;AAAA,IACT;AACA,UAAM,aAAa,YAAY,IAAI,MAAM;AACzC,QAAI,YAAY;AACd,aAAO;AAAA,IACT;AACA,UAAM,QAAQ,IAAI,MAAM,QAAQ,WAAW;AAE3C,gBAAY,IAAI,QAAQ,KAAK;AAE7B,WAAO;AAAA,EACT;;;ACpBO,MAAI,eAAoB;AAE/B,MAAM,iBAAN,MAAqB;AAAA,IAGnB,YAAmB,IAAe;AAAf;AAFnB,WAAO,SAAS;AAChB,WAAO,SAAS;AAAA,IACmB;AAAA,IACnC,MAAM;AACJ,UAAI;AAEF,YAAI,CAAC,KAAK;AAAQ,iBAAO,KAAK,GAAG;AACjC,aAAK,SAAS;AACd,uBAAe;AACf,eAAO,KAAK,GAAG;AAAA,MACjB,UAAE;AACA,uBAAe,KAAK;AACpB,aAAK,SAAS;AAAA,MAChB;AAAA,IACF;AAAA,IACA,OAAO;AACL,WAAK,SAAS;AAAA,IAChB;AAAA,EACF;AAGO,WAAS,OAAO,IAAe;AACpC,UAAM,UAAU,IAAI,eAAe,EAAE;AAErC,YAAQ,IAAI;AAAA,EACd;",
  "names": []
}
